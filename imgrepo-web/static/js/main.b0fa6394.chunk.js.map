{"version":3,"sources":["config.js","imgApi.js","imgRender.js","App.js","reportWebVitals.js","index.js"],"names":["config","key","defaultValue","dataString","window","localStorage","getItem","JSON","parse","getConfig","serverUrl","email","password","_concateURIComponents","p1","p2","endsWith","startsWith","substr","_fetchJson","url","method","body","undefined","fetch","headers","stringify","then","resp","json","getImageList","login","needSignup","downloadImage","id","type","blob","_images","Map","ImgRender","props","callback","has","imgData","get","src","alt","URL","createObjectURL","set","LoadingOutlined","App","state","signedUp","query","images","settingsVisible","editingConfig","uploadFileList","getDropdownMenu","bind","getUploadProps","onUpdateConfig","onConfigUpdated","onSearchImages","onDownloadImage","onDeleteImage","this","reload","setState","status","result","img","onClick","item","Item","uploadFileType","name","accept","action","showUploadList","beforeUpload","file","isJpgOrPng","message","error","isLt2M","size","onChange","info","fileList","forEach","response","push","success","length","forceUpdate","q","FileSaver","saveAs","catch","err","notification","open","description","filter","image","e","target","value","Object","entries","setItem","setConfig","style","margin","prefix","MailOutlined","Password","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","display","flex","className","placeholder","SearchOutlined","onPressEnter","imgProps","width","height","cursor","map","overlay","placement","arrow","evt","arg","icon","UploadOutlined","title","onVisibleChange","content","renderSettings","trigger","SettingOutlined","renderSearchBar","renderImages","renderUploadButton","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0fa6394.chunk.js","sourcesContent":["/*\r\n  The shoppies project\r\n  Copyright (c) 2021 brucehe<bruce.he.62@gmail.com>\r\n  \r\n  See LICENSE.txt for more information\r\n*/\r\n\r\n// get/set/delete (key, value) pair to localStorage\r\nexport function getConfig(key, defaultValue) {\r\n  if (key) {\r\n    const dataString = window.localStorage?.getItem(key);\r\n    if (dataString) {\r\n      return JSON.parse(dataString);\r\n    }\r\n  }\r\n  return defaultValue;\r\n}\r\n\r\nexport function setConfig(key, value) {\r\n  if (key && value !== undefined && value !== null) {\r\n    window.localStorage?.setItem(key, JSON.stringify(value));\r\n  }\r\n}\r\n\r\nexport function removeConfig(key) {\r\n  if (key) {\r\n    window.localStorage?.removeItem(key);\r\n  }\r\n}\r\n\r\nconst config = getConfig(\"config\", {\r\n  serverUrl: \"http://52.73.210.69\",\r\n  email: \"guest@gmail.com\",\r\n  password: \"password\",\r\n});\r\n\r\nexport default config;\r\n","/*\r\n  The shoppies project\r\n  Copyright (c) 2021 brucehe<bruce.he.62@gmail.com>\r\n  \r\n  See LICENSE.txt for more information\r\n*/\r\n\r\nimport config from \"./config\";\r\n\r\n/**\r\n * concatenate URI components, to avoid a common error of double slash\r\n * for example, in stead of https://xxx.com/api/xxx, we are observing https://xxx.com//api/xxx\r\n * @param {*} p1 - URI component1, typically this is the server url\r\n * @param {*} p2 - URI component2,\r\n */\r\nfunction _concateURIComponents(p1, p2) {\r\n  if (p1.endsWith(\"/\")) {\r\n    if (p2.startsWith(\"/\")) {\r\n      return p1 + p2.substr(1);\r\n    } else {\r\n      return p1 + p2;\r\n    }\r\n  } else {\r\n    if (p2.startsWith(\"/\")) {\r\n      return p1 + p2;\r\n    } else {\r\n      return p1 + \"/\" + p2;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * a helper function to fetch json response, with proper email/password attached to the request\r\n * @param {*} url\r\n * @param {*} method\r\n * @param {*} body\r\n */\r\nfunction _fetchJson(url, method = \"GET\", body = undefined) {\r\n  return fetch(_concateURIComponents(config.serverUrl, url), {\r\n    method,\r\n    headers: {\r\n      email: config.email,\r\n      password: config.password,\r\n    },\r\n    body: body ? JSON.stringify(body) : undefined,\r\n  }).then((resp) => resp.json());\r\n}\r\n\r\nexport function getImageList() {\r\n  return _fetchJson(`/images`, \"GET\");\r\n}\r\n\r\nexport function searchImages(q) {\r\n  return _fetchJson(`/images/search?q=${q}`, \"GET\");\r\n}\r\n\r\nexport function deleteImage(id) {\r\n  return _fetchJson(`/images/${id}`, \"DELETE\");\r\n}\r\n\r\n/**\r\n * login/or signup, return response (a json object, pls refer to imgreo API for more info)\r\n * @param {*} needSignup - a flag indicates whether this is a signup, or a login\r\n */\r\nexport function login(needSignup) {\r\n  return fetch(\r\n    _concateURIComponents(config.serverUrl, needSignup ? \"/signup\" : \"/login\"),\r\n    {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email: config.email, password: config.password }),\r\n    }\r\n  ).then((resp) => resp.json());\r\n}\r\n\r\n/**\r\n * download an image, return a Blob\r\n * @param {*} id\r\n * @param {*} type: either thumbnail or original\r\n */\r\nexport function downloadImage(id, type = \"original\") {\r\n  return fetch(\r\n    _concateURIComponents(config.serverUrl, `/images/${id}?type=${type}`),\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        email: config.email,\r\n        password: config.password,\r\n      },\r\n    }\r\n  ).then((resp) => {\r\n    return resp.blob();\r\n  });\r\n}\r\n","/*\r\n  The shoppies project\r\n  Copyright (c) 2021 brucehe<bruce.he.62@gmail.com>\r\n  \r\n  See LICENSE.txt for more information\r\n*/\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nimport { downloadImage } from \"./imgApi\";\r\n\r\n/** _images contains cache images, mapping an id to image data */\r\nconst _images = new Map();\r\n\r\n/**\r\n * render an image if data available otherwise render a placeholder,\r\n * @param {*} id - image's id\r\n * @param {*} props - props of the img element\r\n * @param {*} callback - callback fired when img downloaded\r\n */\r\nexport default function ImgRender(id, props = {}, callback) {\r\n  if (!_images.has(id)) {\r\n    // if the cache does not contain the image, download it\r\n    downloadImage(id, \"thumbnail\")\r\n      .then((resp) => URL.createObjectURL(resp))\r\n      .then((resp) => {\r\n        // put the downloaded image to the cache\r\n        _images.set(id, resp);\r\n\r\n        // notify the caller that image data is ready, hence needs to refresh UI\r\n        if (callback) {\r\n          callback(\"img-downloaded\", id);\r\n        }\r\n      });\r\n\r\n    //...and render an image placeholder\r\n    //return <img src=\"./static/image/image-placeholder.png\" {...props} alt=\"\" />;\r\n\r\n    // alternatively we can render spinning icon\r\n    return <LoadingOutlined {...props} />;\r\n  } else {\r\n    // if the cache contains the image, get it from the cache and render it\r\n    const imgData = _images.get(id);\r\n    return <img src={imgData} {...props} alt=\"\" />;\r\n  }\r\n}\r\n","/*\n  The shoppies project\n  Copyright (c) 2021 brucehe<bruce.he.62@gmail.com>\n  \n  See LICENSE.txt for more information\n*/\n\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\nimport {\n  Input,\n  Button,\n  Menu,\n  Dropdown,\n  notification,\n  Upload,\n  message,\n  Popover,\n} from \"antd\";\nimport {\n  SearchOutlined,\n  UploadOutlined,\n  SettingOutlined,\n  MailOutlined,\n  EyeTwoTone,\n  EyeInvisibleOutlined,\n} from \"@ant-design/icons\";\nimport FileSaver from \"file-saver\";\n\nimport \"./App.css\";\nimport config, { setConfig } from \"./config\";\nimport {\n  login,\n  getImageList,\n  searchImages,\n  downloadImage,\n  deleteImage,\n} from \"./imgApi\";\nimport ImgRender from \"./imgRender\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signedUp: false, // is user signed up?\n      query: \"\", // search query\n      images: [], // current searched images\n      settingsVisible: false, // a flag indicates whether Settings page is visible or not\n      editingConfig: {}, // config in editting, so to not touch the actual config in case user wants to cancel the changes\n    };\n\n    // uploadeFileList is used by the antd module for uploading images, refer to antd website for more info\n    this.uploadFileList = [];\n\n    // bind functions\n    this.getDropdownMenu = this.getDropdownMenu.bind(this);\n    this.getUploadProps = this.getUploadProps.bind(this);\n    this.onUpdateConfig = this.onUpdateConfig.bind(this);\n    this.onConfigUpdated = this.onConfigUpdated.bind(this);\n    this.onSearchImages = this.onSearchImages.bind(this);\n    this.onDownloadImage = this.onDownloadImage.bind(this);\n    this.onDeleteImage = this.onDeleteImage.bind(this);\n  }\n\n  componentDidMount() {\n    // once component mounted, let's reload without signup\n    this.reload(false);\n  }\n\n  reload(needSignup = false) {\n    this.setState({ query: \"\", images: [] });\n    login(needSignup)\n      .then((resp) => {\n        this.setState({ signedUp: resp.status === \"success\" });\n        return getImageList();\n      })\n      .then((resp) => {\n        if (resp.status === \"success\") {\n          this.setState({ images: resp.result });\n        }\n      });\n  }\n\n  /** a dynmic dropdown menu when hover an image, it includes \"Download\" and \"Delete\" two items, for now */\n  getDropdownMenu(img) {\n    return (\n      <Menu\n        onClick={({ item, key }) => {\n          if (key === \"download\") {\n            this.onDownloadImage(img);\n          } else if (key === \"delete\") {\n            this.onDeleteImage(img);\n          }\n        }}\n      >\n        <Menu.Item key=\"download\">Download</Menu.Item>\n        <Menu.Item key=\"delete\">Delete</Menu.Item>\n      </Menu>\n    );\n  }\n\n  /**\n   * upload properties required by antd, please refer to antd website for more info\n   * note that we only accept jpeg/png, and maximum 10m images \n   *   - in the future we may use configuration instead of a hard-coded value\n   * once successfully uploaded, we simply add the image info (from response) \n   * to this.state.images without calling getImageList again\n   * @param {*} uploadFileType \n   */\n  getUploadProps(uploadFileType) {\n    return {\n      name: \"images\",\n      accept: \"image/*\",\n      action: `${config.serverUrl}/images?type=${uploadFileType}`,\n      headers: {\n        email: config.email,\n        password: config.password,\n      },\n      showUploadList: false,\n\n      beforeUpload: (file) => {\n        const isJpgOrPng =\n          file.type === \"image/jpeg\" || file.type === \"image/png\";\n        if (!isJpgOrPng) {\n          message.error(\"You can only upload JPG/PNG file!\");\n        }\n        const isLt2M = file.size / 1024 / 1024 < 10;\n        if (!isLt2M) {\n          message.error(\"Image must smaller than 10MB!\");\n        }\n        return isJpgOrPng && isLt2M;\n      },\n\n      onChange: (info) => {\n        if (info.file.status === \"done\") {\n          const images = [];\n          info.fileList.forEach((file) => {\n            if (file.response.status === \"success\") {\n              images.push(file.response);\n              message.success(`${info.file.name} uploaded.`);\n            }\n          });\n          if (images.length > 0) {\n            this.setState({ images: [...this.state.images, ...images] });\n          }\n          this.forceUpdate();\n        } else if (info.file.status === \"error\") {\n          message.error(`${info.file.name} upload failed.`);\n        }\n      },\n    };\n  }\n\n  /**\n   * search by calling /search endpoint, or get all images if query is empty\n   */\n  onSearchImages() {\n    const { query } = this.state;\n    if (query) {\n      searchImages(query).then((resp) => {\n        if (resp.status === \"success\") {\n          this.setState({ images: resp.result });\n        }\n      });\n    } else {\n      getImageList().then((resp) => {\n        if (resp.status === \"success\") {\n          this.setState({ images: resp.result });\n        }\n      });\n    }\n  }\n\n\n  /**\n   * utilize file-saver module to save a downloaded image (Blob response)\n   * @param {*} img \n   */\n  onDownloadImage(img) {\n    downloadImage(img.id, \"original\")\n      .then((resp) => {\n        FileSaver.saveAs(resp, img.name);\n      })\n      .catch((err) => {\n        notification.open({\n          message: \"image\",\n          description: `failed to download ${img.name}, ${JSON.stringify(err)}`,\n        });\n      });\n  }\n\n  onDeleteImage(img) {\n    deleteImage(img.id)\n      .then((resp) => {\n        if (resp.status === \"success\") {\n          this.setState({\n            images: this.state.images.filter((image) => image.id !== img.id),\n          });\n        } else {\n          notification.open({\n            message: \"image\",\n            description: `failed to delete ${img.name}`,\n          });\n        }\n      })\n      .catch((err) => {\n        notification.open({\n          message: \"image\",\n          description: `failed to delete ${img.name}, ${JSON.stringify(err)}`,\n        });\n      });\n  }\n\n  /**\n   * save temporarily modified configuration to editingConfig\n   * we don't save it directly to config because user may cancel the settings\n   * @param {*} name \n   * @param {*} e \n   */\n  onUpdateConfig(name, e) {\n    const editingConfig = { ...this.state.editingConfig };\n    editingConfig[name] = e.target.value;\n    this.setState({ editingConfig });\n  }\n\n  /**\n   * so user decides to permanently change the configuration\n   * @param {*} needSignup \n   */\n  onConfigUpdated(needSignup) {\n    const { editingConfig } = this.state;\n    for (let [key, value] of Object.entries(editingConfig)) {\n      config[key] = value;\n    }\n    setConfig('config', config);\n    this.reload(needSignup);\n  }\n\n  renderSettings() {\n    const { editingConfig } = this.state;\n    return (\n      <div style={{ margin: \"8px\" }}>\n        <Input\n          style={{ margin: \"16px\" }}\n          value={editingConfig.serverUrl}\n          onChange={(e) => this.onUpdateConfig(\"serverUrl\", e)}\n        />\n        <Input\n          type=\"emial\"\n          size=\"large\"\n          prefix={<MailOutlined />}\n          style={{ margin: \"16px\" }}\n          value={editingConfig.email}\n          onChange={(e) => this.onUpdateConfig(\"email\", e)}\n        />\n\n        <Input.Password\n          style={{ margin: \"16px\" }}\n          value={editingConfig.password}\n          onChange={(e) => this.onUpdateConfig(\"password\", e)}\n          iconRender={(visible) =>\n            visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\n          }\n        />\n        <div style={{ display: \"flex\" }}>\n          <span style={{ flex: \"auto\" }} />\n          <Button onClick={(e) => this.setState({ settingsVisible: false })}>\n            Cancel\n          </Button>\n          <Button\n            style={{ margin: \"0 16px\" }}\n            onClick={(e) => {\n              this.setState({ settingsVisible: false });\n              this.onConfigUpdated(true);\n            }}\n          >\n            Sign Up\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={(e) => {\n              this.setState({ settingsVisible: false });\n              this.onConfigUpdated(false);\n            }}\n          >\n            Login\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderSearchBar() {\n    return (\n      <div className=\"search-bar\">\n        <div className=\"search-bar-title\">Search Images</div>\n        <Input\n          placeholder=\"search images by name\"\n          prefix={<SearchOutlined />}\n          value={this.state.query}\n          onChange={(e) => {\n            this.setState({ query: e.target.value });\n          }}\n          onPressEnter={(e) => {\n            this.onSearchImages();\n          }}\n        />\n      </div>\n    );\n  }\n\n  renderImages() {\n    const { images } = this.state;\n    const imgProps = { width: \"100px\", height: \"100px\", cursor: \"pointer\" };\n    return (\n      <div className=\"images-container\">\n        {images.map((img) => {\n          return (\n            <div className=\"img-container\" key={`img#${img.id}`}>\n              <Dropdown\n                overlay={this.getDropdownMenu(img)}\n                placement=\"bottomCenter\"\n                arrow\n              >\n                {ImgRender(img.id, imgProps, (evt, arg) => this.forceUpdate())}\n              </Dropdown>\n              <span className=\"img-name\">{img.name}</span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  /**\n   * utilize antd's Upload component, here we use a very simply implementation, \n   * there are many other fancy implementations, such as preview, can be found in antd's website \n   * @param {*} type \n   */\n  renderUploadButton(type) {\n    return (\n      <Upload {...this.getUploadProps(type)} fileList={this.uploadFileList}>\n        <Button\n          icon={<UploadOutlined />}\n          onClick={() => {\n            this.uploadFileList = [];\n          }}\n          style={{ margin: \"16px 16px 0 0\" }}\n        >\n          {type === \"private\" ? \"Upload private image\" : \"Upload public image\"}\n        </Button>\n      </Upload>\n    );\n  }\n\n  render() {\n    const { settingsVisible, signedUp } = this.state;\n    return (\n      <div className=\"app\">\n        <div style={{ display: \"flex\" }}>\n          <span className=\"app-title\">The Shoppies</span>\n          <span style={{ flex: \"auto\" }} />\n          <Popover\n            placement=\"topLeft\"\n            title={\"Settings\"}\n            visible={settingsVisible}\n            onVisibleChange={(visible) => {\n              this.setState({\n                editingConfig: { ...config },\n                settingsVisible: visible,\n              });\n            }}\n            content={this.renderSettings.bind(this)}\n            trigger=\"click\"\n          >\n            <SettingOutlined />\n          </Popover>\n        </div>\n        <div className=\"section\">{this.renderSearchBar()}</div>\n        <div style={{ display: \"flex\" }}>{this.renderImages()}</div>\n        {signedUp && (\n          <div>\n            {this.renderUploadButton(\"private\")}\n            {this.renderUploadButton(\"public\")}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*\n  The shoppies project\n  Copyright (c) 2021 brucehe<bruce.he.62@gmail.com>\n  \n  See LICENSE.txt for more information\n*/\n\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*\n  The shoppies project\n  Copyright (c) 2021 brucehe<bruce.he.62@gmail.com>\n  \n  See LICENSE.txt for more information\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}